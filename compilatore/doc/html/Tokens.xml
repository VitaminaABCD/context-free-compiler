<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>FileChooser</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>FileChooser</Scope>
    </TokenIdentifier>
    <Path>class_file_chooser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GenericFileFilter</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>GenericFileFilter</Scope>
    </TokenIdentifier>
    <Path>class_generic_file_filter.html</Path>
    <Abstract>Filter the file type for the file chooser.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Home</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>Home</Scope>
    </TokenIdentifier>
    <Path>class_home.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToXml</Name>
      <APILanguage>java</APILanguage>
      <Type>clm</Type>
      <Scope>Home</Scope>
    </TokenIdentifier>
    <Path>class_home.html</Path>
    <Anchor>a69f212766dabec3ed163022f15b5a97d</Anchor>
    <Abstract>Store an ST into xml file named &amp;quot;ST.xml&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HomeGui</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>HomeGui</Scope>
    </TokenIdentifier>
    <Path>class_home_gui.html</Path>
    <Abstract>The gui access.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HomeGui</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>HomeGui</Scope>
    </TokenIdentifier>
    <Path>class_home_gui.html</Path>
    <Anchor>add92e1cf71983b9cc6f70f040d3ea593</Anchor>
    <Abstract>Initialize GUI component and start the process.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>main</Name>
      <APILanguage>java</APILanguage>
      <Type>clm</Type>
      <Scope>HomeGui</Scope>
    </TokenIdentifier>
    <Path>class_home_gui.html</Path>
    <Anchor>a241867731938068ae82ae7d5e7371fa3</Anchor>
    <Abstract>Launch the application.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>startProcess</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>HomeGui</Scope>
    </TokenIdentifier>
    <Path>class_home_gui.html</Path>
    <Anchor>a52f0602a97cd1ef63063bbbbda036d26</Anchor>
    <Abstract>Start the parsing of grammar file and create result file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initialize</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>HomeGui</Scope>
    </TokenIdentifier>
    <Path>class_home_gui.html</Path>
    <Anchor>a5e935834d62fe14dfda2c9884f1f7010</Anchor>
    <Abstract>Save operation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>stMethod</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>HomeGui</Scope>
    </TokenIdentifier>
    <Path>class_home_gui.html</Path>
    <Anchor>a2903109ca5fa51fc78f8487c79dafc43</Anchor>
    <Abstract>Create the ST.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>writeToXml</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>HomeGui</Scope>
    </TokenIdentifier>
    <Path>class_home_gui.html</Path>
    <Anchor>a0428d3c56abfafc769684835c1581f38</Anchor>
    <Abstract>Store an ST into xml file named &amp;quot;ST.xml&amp;quot;.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>TxtFileFilter</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>TxtFileFilter</Scope>
    </TokenIdentifier>
    <Path>class_txt_file_filter.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::grammar</Name>
      <APILanguage>java</APILanguage>
      <Type>ns</Type>
      <Scope>contextFree::grammar</Scope>
    </TokenIdentifier>
    <Path>namespacecontext_free_1_1grammar.html</Path>
    <Abstract>Contains the class for represent and manipulate a grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::grammar::ContextFreeGrammar</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Abstract>Define a context-free grammar type.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getV</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>a664b69a446100c7c4e7a390fb2ee5ebc</Anchor>
    <Abstract>Get non-terminal symbols list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setV</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>ad3d3e1efadeb4cc6ed252342fd52c76c</Anchor>
    <Abstract>Set the list of non-terminal symbols.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getT</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>a75f1bbf1e0d1d1350032c628779fcffd</Anchor>
    <Abstract>Get terminal symbols list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setT</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>aa1c9a277d660b2ba8443f47cb9543811</Anchor>
    <Abstract>Set the list of terminal symbols.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getP</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>ad00a00b018844cf2acb0c1c5f5d97468</Anchor>
    <Abstract>Get production list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setP</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>a2a66695521702040224c23898b579c92</Anchor>
    <Abstract>Set the produciton list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getS</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>ad278c4f5e2bdec1d011d11a3008d8754</Anchor>
    <Abstract>Get the axioms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setS</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>a2f4c3ec7270d799ed127cb162e0213b3</Anchor>
    <Abstract>Set the axioms for the grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirst</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>adc3a25917132474960be34329cdaead9</Anchor>
    <Abstract>Get the list of first for the grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirst</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>a2140cdc636585e9714e8dc42c936eee5</Anchor>
    <Abstract>I spent a character returns the first list associated to it.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFollow</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>a5dae0e5de95349d310869fb5941cb5be</Anchor>
    <Abstract>I spent a character returns the Follow list associated to it.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>nullo</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>ac880ed3ca36ddcd8e20d8279af08244d</Anchor>
    <Abstract>population structure Bolean [] null defined in class grammar, it has the same size of V...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>first</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>a9c3bfe0b038204420b470fab326ce7bb</Anchor>
    <Abstract>Populate structure in Set&amp;lt;String&amp;gt;[]first for each non-terminal V, using a structure of type Set to av...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>follow</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>aca5cad8fa908f908d38e0e7e0aa181ed</Anchor>
    <Abstract>Population structure in Set &amp;lt;String&amp;gt; [] first for each non-terminal V, using a structure of type Set ...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toOneLineString</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.ContextFreeGrammar</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_context_free_grammar.html</Path>
    <Anchor>a922203e2db862d2a8ab31e8e7736273b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::grammar::GRAMMAR_TYPE</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.grammar.GRAMMAR_TYPE</Scope>
    </TokenIdentifier>
    <Path>enumcontext_free_1_1grammar_1_1_g_r_a_m_m_a_r___t_y_p_e.html</Path>
    <Abstract>Specify the type of a grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::grammar::GrammarFactory</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.grammar.GrammarFactory</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_grammar_factory.html</Path>
    <Abstract>An object factory that create a correct instance of grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>createGrammar</Name>
      <APILanguage>java</APILanguage>
      <Type>clm</Type>
      <Scope>contextFree.grammar.GrammarFactory</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_grammar_factory.html</Path>
    <Anchor>a25d4e5bf4a9a452efca5dd6518e16c25</Anchor>
    <Abstract>Check the type of grammar (ex.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkType</Name>
      <APILanguage>java</APILanguage>
      <Type>clm</Type>
      <Scope>contextFree.grammar.GrammarFactory</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_grammar_factory.html</Path>
    <Anchor>a513482168bb15e55211bc4f04e276711</Anchor>
    <Abstract>Controls that make up the grammar productions that are valid.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::grammar::IGrammar</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Abstract>Grammar Interface.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getV</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>a4b1bc2134e63051dc37e693294aaeec6</Anchor>
    <Abstract>Get non-terminal symbols list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setV</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>ae7bd17123ad7424af06a7da75a6bc745</Anchor>
    <Abstract>Set the list of non-terminal symbols.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getT</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>a996f5e0bed5a6ac469b764f56d420fb1</Anchor>
    <Abstract>Get terminal symbols list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setT</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>a775125de1388036059da1860ae61a100</Anchor>
    <Abstract>Set the list of terminal symbols.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getP</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>a629ab4dc36a869b93fa239a3fee760f9</Anchor>
    <Abstract>Get production list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setP</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>ac070229e5571e47032b5199c0bf2c354</Anchor>
    <Abstract>Set the produciton list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setS</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>a134f8b2183ec804eff78ac57b16a0ab9</Anchor>
    <Abstract>Set the axioms for the grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getS</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>aceb36e584d26bd39a0f5186742cc9b5b</Anchor>
    <Abstract>Get the axioms.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirst</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>a256e9280e008a7c709ccb80725ccc0f2</Anchor>
    <Abstract>Get the list of first for the grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFollow</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>aad085d9f84a32ca1abe5fba0c9e5f20c</Anchor>
    <Abstract>Get the list of follow for the grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getFirst</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>a7a05f11e88cdbe29db1849541592e272</Anchor>
    <Abstract>Get the list of follow for the grammarfor a specific symbol.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toOneLineString</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.IGrammar</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1grammar_1_1_i_grammar.html</Path>
    <Anchor>a5fdeb5a6a9426b400c2fe805566a377c</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::grammar::Production</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.grammar.Production</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_production.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Production</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.Production</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_production.html</Path>
    <Anchor>aa793940d0a65f644495141b4fe4a86c0</Anchor>
    <Abstract>Creates an object production and initialize it&amp;#39;s rightSimbolsList.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Production</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.Production</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_production.html</Path>
    <Anchor>a1db3c4e260abdcac50a8425cc9bd901f</Anchor>
    <Abstract>Create a Complete production representation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Production</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.Production</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_production.html</Path>
    <Anchor>a70571ea099db67d650e87f0de16d684b</Anchor>
    <Abstract>Create a Complete production representation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLeftSimbols</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.Production</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_production.html</Path>
    <Anchor>aff0ed3fbde7f7a476a993936c27ddef7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.grammar.Production</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1grammar_1_1_production.html</Path>
    <Anchor>a43d78cd85446efbbffe59a2278c410d1</Anchor>
    <Abstract>return a formatted string in the form axioms :: = expression</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::scanner</Name>
      <APILanguage>java</APILanguage>
      <Type>ns</Type>
      <Scope>contextFree::scanner</Scope>
    </TokenIdentifier>
    <Path>namespacecontext_free_1_1scanner.html</Path>
    <Abstract>Contains class and method for create and initialize grammar parser.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::scanner::Automa</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.scanner.Automa</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_automa.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>newItemsFromKernels</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.Automa</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_automa.html</Path>
    <Anchor>a7cb3536eab5b56faee50dafd8de978ad</Anchor>
    <Abstract>Get kernels element for each states into automa.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getState</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.Automa</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_automa.html</Path>
    <Anchor>a1c916160a989c51dde68e032de19744f</Anchor>
    <Abstract>Return a state with a specific state index.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>removeDollarLookahed</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.Automa</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_automa.html</Path>
    <Anchor>aae82c530ffa9a9ea010de9eb9f77707d</Anchor>
    <Abstract>remove dollar simbol lookahed</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::scanner::IndexedProduction</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.scanner.IndexedProduction</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_indexed_production.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getCharAfter</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.IndexedProduction</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_indexed_production.html</Path>
    <Anchor>a732f8fa87c6841cba382c88a6a6c30a5</Anchor>
    <Abstract>Return the next symbol that that will be read.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getLookahead</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.IndexedProduction</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_indexed_production.html</Path>
    <Anchor>a45b191078f89a67427a2593b67ae4f1e</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>compare</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.IndexedProduction</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_indexed_production.html</Path>
    <Anchor>a8346f298c18af8ce2f48442a12b3a123</Anchor>
    <Abstract>Compare to production without the dot.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>toString</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.IndexedProduction</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_indexed_production.html</Path>
    <Anchor>a445e1ce3ced2a3b4e1157bd682f973a6</Anchor>
    <Abstract>return a formatted string in the form axioms :: = expression</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::scanner::IScanner</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.scanner.IScanner</Scope>
    </TokenIdentifier>
    <Path>interfacecontext_free_1_1scanner_1_1_i_scanner.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::scanner::LALR1</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.scanner.LALR1</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_a_l_r1.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>init</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LALR1</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_a_l_r1.html</Path>
    <Anchor>a84de2247841f98c9d1339acac165d141</Anchor>
    <Abstract>Initialize the LALR(1) automaton from LR0 automaton.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chiusuraLR1</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LALR1</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_a_l_r1.html</Path>
    <Anchor>a879873c5f879881494d342782387d661</Anchor>
    <Abstract>Passed a list of production I that form the kernel of a state, return closing it, and the lookahead s...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>tableCostruction</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LALR1</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_a_l_r1.html</Path>
    <Anchor>a92b63b5d61bbdd523a16aa5e577c2ba6</Anchor>
    <Abstract>builds the Action table GoTo from an automa LALR1 and tells us if it is or not type of LALR1...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>reduce</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LALR1</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_a_l_r1.html</Path>
    <Anchor>a909aea9ab05f3633c169e4dd20447e62</Anchor>
    <Abstract>if the point is in the last position he wrote the reduces in the action table.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>actionWrite</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LALR1</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_a_l_r1.html</Path>
    <Anchor>aee49a037861ca73f5380efb261517825</Anchor>
    <Abstract>Writes the action Reduce or Scift in the Action table.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>printTable</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LALR1</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_a_l_r1.html</Path>
    <Anchor>a452dc07f015344b3681d8e1a161d51dd</Anchor>
    <Abstract>Return a string with tables Goto Action.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>calculateSymbol</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LALR1</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_a_l_r1.html</Path>
    <Anchor>ab1c19e75693982310b7494bd3b8623c9</Anchor>
    <Abstract>Calculate one step of lookahead symbol from an automaton with the algorithm of spontaneous generation...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::scanner::LR0</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.scanner.LR0</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_r0.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>chiusura</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LR0</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_r0.html</Path>
    <Anchor>a313dfc00f370a910932b02034e26fb8c</Anchor>
    <Abstract>*I passed a list of production that form the kernel of a state, return closing it</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>GoTo</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LR0</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_r0.html</Path>
    <Anchor>a087486ba03c2fb5ab400e425e7b54bbc</Anchor>
    <Abstract>Passed a state and the symbol that follows the point, returns the kernel of the new state with the re...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>Item</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LR0</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_r0.html</Path>
    <Anchor>a5c7d77fe2a994398ef6312251e2f6109</Anchor>
    <Abstract>given a grammar G we calculate the associated grammar augmented by adding the production S &amp;#39;:: =...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>uguale</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LR0</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_r0.html</Path>
    <Anchor>ace66d28273502a9daf8e4550f48b5782</Anchor>
    <Abstract>checks if a state is present in an automaton</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>prodPresente</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.LR0</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_r0.html</Path>
    <Anchor>a43275125600a950a4a1f78ce565eac5f</Anchor>
    <Abstract>checks if a production is already in a list of productions.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::scanner::LR1</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.scanner.LR1</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_l_r1.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::scanner::ScannerFactory</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.scanner.ScannerFactory</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_scanner_factory.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>contextFree::scanner::State</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>contextFree.scanner.State</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_state.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.State</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_state.html</Path>
    <Anchor>ae93b8be2177c617058502abfcfce5204</Anchor>
    <Abstract>constructor state 0</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.State</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_state.html</Path>
    <Anchor>a81cd656c8ed26ba10aedd6598d090dcc</Anchor>
    <Abstract>constructor state i-th, with empty list productions</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.State</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_state.html</Path>
    <Anchor>a8dc8e0da9fdc805b0202f66eebce1e57</Anchor>
    <Abstract>constructor state i-th, whit list production c</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>State</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.State</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_state.html</Path>
    <Anchor>a7ab62a86fa7c7072e898d9b8ab1b3cd5</Anchor>
    <Abstract>constructor state i-th, whit list production c and list of lookahead</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>gotoStateIndex</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.State</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_state.html</Path>
    <Anchor>a5259b186755c072d90d06dceb2b756ac</Anchor>
    <Abstract>Return the index of the state shifted with a specific simbol.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getKernels</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>contextFree.scanner.State</Scope>
    </TokenIdentifier>
    <Path>classcontext_free_1_1scanner_1_1_state.html</Path>
    <Anchor>a987d4c7ae8eb2754f13f0099f5d861a5</Anchor>
    <Abstract>return one list&amp;lt;IndexedProduction&amp;gt; with the kernel of a state</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error::ERROR_TYPE</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>error.ERROR_TYPE</Scope>
    </TokenIdentifier>
    <Path>enumerror_1_1_e_r_r_o_r___t_y_p_e.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>error::ErrorManager</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>error.ErrorManager</Scope>
    </TokenIdentifier>
    <Path>classerror_1_1_error_manager.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputParser</Name>
      <APILanguage>java</APILanguage>
      <Type>ns</Type>
      <Scope>inputParser</Scope>
    </TokenIdentifier>
    <Path>namespaceinput_parser.html</Path>
    <Abstract>Contains the class for file parsing.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputParser::AbstractInputParser</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>inputParser.AbstractInputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_abstract_input_parser.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.AbstractInputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_abstract_input_parser.html</Path>
    <Anchor>a548b0f6fa44b7954b79bdd964336bafe</Anchor>
    <Abstract>Execute the parse operation on the object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputParser::ConcreteParserFactory</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>inputParser.ConcreteParserFactory</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_concrete_parser_factory.html</Path>
    <Abstract>Concrete class that implement the factoryMethod of InputParserFactory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factoryMethod</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.ConcreteParserFactory</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_concrete_parser_factory.html</Path>
    <Anchor>a6fdfbfef9e48417903f60faf67640d1e</Anchor>
    <Abstract>Return different object instance based on the extension.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputParser::FourLineInputParser</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>inputParser.FourLineInputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_four_line_input_parser.html</Path>
    <Abstract>Parse a four line grammar format.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.FourLineInputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_four_line_input_parser.html</Path>
    <Anchor>a99c37488d66cfeecb33e13d573b4a81a</Anchor>
    <Abstract>Read the file .4l and creates the object grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputParser::InputParser</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>inputParser.InputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_input_parser.html</Path>
    <Abstract>An object rappresentation of input file parsing result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputParser</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.InputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_input_parser.html</Path>
    <Anchor>aaf865808d98a84af1505caa5a2f61cc4</Anchor>
    <Abstract>Default constructor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InputParser</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.InputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_input_parser.html</Path>
    <Anchor>a483b176df94134a641628e8856ce994a</Anchor>
    <Abstract>Constructor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getInput</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.InputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_input_parser.html</Path>
    <Anchor>aad5d11e151df9b0ede3250d08fc00dfd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setInput</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.InputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_input_parser.html</Path>
    <Anchor>a9b7d170996964400a619bb3e66253a93</Anchor>
    <Abstract>Set input file path.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getGrammar</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.InputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_input_parser.html</Path>
    <Anchor>a48376a4919241160cab692fa0001974f</Anchor>
    <Abstract>Return grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setGrammar</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.InputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_input_parser.html</Path>
    <Anchor>a63e2fa344a4ace430bc7ad7218bc3a37</Anchor>
    <Abstract>Set a grammar.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.InputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_input_parser.html</Path>
    <Anchor>a08cd69f3dbb1be117c45b4ccf5d861e6</Anchor>
    <Abstract>Execute the parse operation on the object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputParser::InputParserFactory</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>inputParser.InputParserFactory</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_input_parser_factory.html</Path>
    <Abstract>Abstract InputParserFactory.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>factoryMethod</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.InputParserFactory</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_input_parser_factory.html</Path>
    <Anchor>a48971c2679b589f34a7051e795d48c49</Anchor>
    <Abstract>Return different object instance based on the extension.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputParser::LRInputParser</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>inputParser.LRInputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_l_r_input_parser.html</Path>
    <Abstract>Parse a txt file with action table, goto table and grammar in one line format (*.1l).</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.LRInputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_l_r_input_parser.html</Path>
    <Anchor>ad81d1510d9b12b4b8b2dedbe117e88c1</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>readTable</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.LRInputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_l_r_input_parser.html</Path>
    <Anchor>a1ade16089652dc354434e1ddb1769e96</Anchor>
    <Abstract>read the table in the first part of the file and store it in an hashtable with simbol as key and a li...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputParser::SingleLineInputParser</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>inputParser.SingleLineInputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_single_line_input_parser.html</Path>
    <Abstract>Parse a single line grammar format.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.SingleLineInputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_single_line_input_parser.html</Path>
    <Anchor>ad822676b0d3182a591e2004c3bcc79d5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parseString</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.SingleLineInputParser</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_single_line_input_parser.html</Path>
    <Anchor>a90641140f8686fc97fd40b72beccf0a3</Anchor>
    <Abstract>Execute the parse operation on the object.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>inputParser::SplitInSymbols</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>inputParser.SplitInSymbols</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_split_in_symbols.html</Path>
    <Abstract>Split the input string in symbols list.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>SplitInSymbols</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>inputParser.SplitInSymbols</Scope>
    </TokenIdentifier>
    <Path>classinput_parser_1_1_split_in_symbols.html</Path>
    <Anchor>a0426f5d1c5abebe971c5042584896bd0</Anchor>
    <Abstract>Constructor with input String.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parserProgram</Name>
      <APILanguage>java</APILanguage>
      <Type>ns</Type>
      <Scope>parserProgram</Scope>
    </TokenIdentifier>
    <Path>namespaceparser_program.html</Path>
    <Abstract>Contains the parser program&amp;#39;s class that to create the ST of an input phrase.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parserProgram::HistoryElement</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Abstract>This class represent an element of the parsing history.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HistoryElement</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Anchor>a45f360f314f688585844a62592bdb5c5</Anchor>
    <Abstract>Default constructor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HistoryElement</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Anchor>ae6d3bdd3606301f0b08d4e9258b5c5cf</Anchor>
    <Abstract>Construct the object with specified parsing stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>HistoryElement</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Anchor>a0cd8852d35a48856c6e893ae33cbde30</Anchor>
    <Abstract>Construct the object with specified parsing stack, production and step.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getStack</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Anchor>a8f20a699af1fa68f114acef0f72117b5</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setStack</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Anchor>a640ecb265a57f1b084fe99cf2a2a9a35</Anchor>
    <Abstract>Set the stack.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getProduction</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Anchor>a1e3354d1bc805c952c4ed9a35ddac0dd</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setProduction</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Anchor>a2311f48be369f4d0e6be47c2a7ac7546</Anchor>
    <Abstract>Set the production.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getSimbol</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Anchor>ab64610fe65f58bca7d542244378ac030</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setSimbol</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Anchor>a54ecd254d7abd49d0d10230892dfc35b</Anchor>
    <Abstract>Set the parsing step.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>isShift</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.HistoryElement</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_history_element.html</Path>
    <Anchor>a233c9c55643f4d6bc8103c4e2c8bd038</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parserProgram::ParserProgram</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>parserProgram.ParserProgram</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_parser_program.html</Path>
    <Abstract>This class is responsible of the parsing of input string, and stack parsing creation.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parse</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.ParserProgram</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_parser_program.html</Path>
    <Anchor>ac8e01a54887a9c9f0a9d277d5cbb0c61</Anchor>
    <Abstract>The leading method of the class, responsible of the parsing of input string and consequent stack pars...</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parserProgram::RESULT</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>parserProgram.RESULT</Scope>
    </TokenIdentifier>
    <Path>enumparser_program_1_1_r_e_s_u_l_t.html</Path>
    <Abstract>The string parsing result.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>parserProgram::St</Name>
      <APILanguage>java</APILanguage>
      <Type>cl</Type>
      <Scope>parserProgram.St</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_st.html</Path>
    <Abstract>Abstract Syntax Three class.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>St</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.St</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_st.html</Path>
    <Anchor>aeb3f4be7d7e11f582302cb2a0c3339a6</Anchor>
    <Abstract>Default constructor.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>St</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.St</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_st.html</Path>
    <Anchor>a24290706e5844bd14027ac8600744963</Anchor>
    <Abstract>Construct the object with specified history.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>getRoot</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.St</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_st.html</Path>
    <Anchor>aae0a295da8eb563e9bb2aa3ba5beab08</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>initFromHistory</Name>
      <APILanguage>java</APILanguage>
      <Type>instm</Type>
      <Scope>parserProgram.St</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_st.html</Path>
    <Anchor>afe794d3e531e9bd6c21dbb1f6398bcd0</Anchor>
    <Abstract>Initialize the three from the parsing history.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>history</Name>
      <APILanguage>java</APILanguage>
      <Type>data</Type>
      <Scope>parserProgram.St</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_st.html</Path>
    <Anchor>a7f4c78520e31f39647f69eaa11258c33</Anchor>
    <Abstract>the chronology of parsing</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>root</Name>
      <APILanguage>java</APILanguage>
      <Type>data</Type>
      <Scope>parserProgram.St</Scope>
    </TokenIdentifier>
    <Path>classparser_program_1_1_st.html</Path>
    <Anchor>aaac4343a95fae5731d6186137e4ba3b0</Anchor>
    <Abstract>the root of the three</Abstract>
  </Token>
</Tokens>
